{"version":3,"sources":["Components/Song.js","Components/Player.js","Data.js","LibrarySong.js","Library.js","Components/Nav.js","App.js","index.js"],"names":["Song","currentSong","className","src","cover","alt","name","artist","Player","isPlaying","setIsPlaying","audioref","songInfo","setSongInfo","setCurrentSong","songs","setSong","useEffect","newSongs","map","s","id","active","getTime","time","Math","floor","slice","skipSongHandler","direction","a","position","findIndex","song","length","current","play","trackAnimation","transform","animationPercentage","currentTime","style","background","color","onChange","e","target","value","min","max","duration","type","size","icon","faAngleLeft","onClick","pause","faPause","faPlay","faAngleRight","chillHop","audio","uuidv4","LibrarySong","changeSong","Library","libraryStatus","setPosition","Nav","setLibraryStatus","faMusic","App","useRef","useState","timeUpdateHandler","roundCurrent","round","roundDuration","animation","playNextSong","data","onTimeUpdate","ref","onLoadedMetadata","onEnded","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0671da33.chunk.js","sourcesContent":["import React from 'react';\r\nconst Song=({currentSong})=>\r\n{\r\n    return(\r\n        <div className=\"song-container\">\r\n            \r\n           <img src={currentSong.cover} alt=\"\"></img>\r\n            <h2>{currentSong.name}</h2>\r\n            <h3>{currentSong.artist}</h3>\r\n        </div>\r\n    )\r\n}\r\nexport default Song;","import React,{useState,useEffect} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faPlay,faAngleLeft,faAngleRight,faPause} from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Player=({currentSong,isPlaying,setIsPlaying,audioref,songInfo,setSongInfo,setCurrentSong,songs,setSong})=>\r\n{\r\n    useEffect(()=>{\r\n        \r\n     const newSongs=songs.map((s)=>{\r\n         if(currentSong.id === s.id)\r\n         {\r\n             \r\n             return{\r\n                 ...s,\r\n                    active: true,\r\n             };\r\n     \r\n               \r\n            }\r\n             \r\n         \r\n         else{\r\n               return{\r\n                 ...s,\r\n                    active: false,}\r\n               \r\n             \r\n         }\r\n     })\r\n     setSong(newSongs);\r\n    },[currentSong])\r\n    \r\n    const playSongHandler=()=>{\r\n        if(isPlaying)\r\n        {\r\n        \r\n        audioref.current.pause();\r\n        setIsPlaying (!isPlaying);\r\n        }\r\n        else\r\n      { \r\n        \r\n        audioref.current.play();\r\n        setIsPlaying(!isPlaying);\r\n      }\r\n\r\n    }\r\n   \r\n    const getTime=(time)=>{\r\n        return(\r\n            Math.floor(time/60) + \":\" + (\"0\" + Math.floor(time%60)).slice(-2)\r\n        )\r\n    }\r\n    const dragSlider=(e)=>{\r\n        audioref.current.currentTime=e.target.value;\r\n        setSongInfo({...songInfo,currentTime:e.target.value})\r\n    }\r\n    const skipSongHandler=async (direction)=>{\r\n        \r\n        let position=songs.findIndex((song)=> song.id === currentSong.id)\r\n        if(direction === \"forward\")\r\n        {\r\n        await setCurrentSong(songs[(position+1)%songs.length])\r\n        }\r\n        else\r\n        {\r\n             if(position===0)\r\n             {\r\n                await setCurrentSong(songs[songs.length-1])\r\n             }\r\n             else{\r\n        await setCurrentSong(songs[position-1])\r\n             }\r\n        }\r\n        if(isPlaying){\r\n            audioref.current.play();\r\n        }\r\n        \r\n        \r\n    \r\n        \r\n    };\r\n    const trackAnimation={\r\n        transform:`translateX(${songInfo.animationPercentage}%)`\r\n    }\r\n    \r\n \r\n    return(\r\n    <div className=\"player\">\r\n        <div className=\"time-control\">\r\n            <p>{getTime(songInfo.currentTime)}</p>\r\n            <div className=\"track\" style={{background : `linear-gradient(to right,${currentSong.color[0]},${currentSong.color[1]})`}} >\r\n            <input onChange={dragSlider} min={0} max={songInfo.duration} value={songInfo.currentTime} type=\"range\"/>\r\n            <div className=\"animate-track\" style={trackAnimation}></div>\r\n            </div>\r\n            <p>{songInfo.duration?getTime(songInfo.duration):\"0:00\"}</p>\r\n        </div>\r\n        <div className=\"play-control\">\r\n            <FontAwesomeIcon className=\"skip-backward\" size=\"2x\" icon={faAngleLeft} onClick={()=>{skipSongHandler(\"back\")}} />\r\n            <FontAwesomeIcon onClick={playSongHandler} className=\"play\" size=\"2x\" icon={isPlaying?faPause:faPlay} />\r\n            <FontAwesomeIcon className=\"skip-forward\" size=\"2x\" icon={faAngleRight} onClick={()=>{skipSongHandler(\"forward\")}} />\r\n            \r\n        </div>\r\n        \r\n    </div>\r\n    );\r\n}\r\nexport default Player;","import { v4 as uuidv4 } from \"uuid\";\r\nfunction chillHop() {\r\n  return [\r\n    {\r\n      name: \"Beaver Creek\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: true,\r\n    },\r\n    {\r\n      name: \"Daylight\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Keep Going\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Nightfall\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Reflection\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Under the City Stars\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    //ADD MORE HERE\r\n  ];\r\n}\r\n\r\nexport default chillHop;","import React from 'react';\r\n\r\nconst LibrarySong=({song,setCurrentSong,audioref,isPlaying,setSong,songs})=>\r\n{\r\n    const changeSong=async()=>{\r\n      await setCurrentSong(song);\r\n      \r\n     \r\n     const newSongs=songs.map((s)=>{\r\n         if(song.id === s.id)\r\n         {\r\n             \r\n             return{\r\n                 ...s,\r\n                    active: true,\r\n             };\r\n     \r\n               \r\n            }\r\n             \r\n         \r\n         else{\r\n               return{\r\n                 ...s,\r\n                    active: false,}\r\n               \r\n             \r\n         }\r\n     })\r\n     setSong(newSongs);\r\n     if(isPlaying){\r\n         audioref.current.play();\r\n     }\r\n      \r\n        \r\n    \r\n      \r\n      }\r\n    return(\r\n        <div className={`library-song-container ${song.active?'selected':\" \"} `} onClick={changeSong}>\r\n            \r\n           <img src={song.cover} alt=\"\"></img>\r\n           <div className=\"song-description\">      \r\n            <h3>{song.name}</h3>\r\n            <h4>{song.artist}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default LibrarySong;","import React from 'react'\r\nimport LibrarySong from './LibrarySong.js'\r\nconst Library=({songs,setCurrentSong,audioref,isPlaying,setSong,libraryStatus,setPosition,position})=>{\r\n    return(\r\n    <div  className={`library  ${libraryStatus ? `toggle-library` : ' '} `}>\r\n        <h2>Library</h2>\r\n        <div className=\"library-songs\">\r\n       \r\n            {songs.map((song)=>(\r\n                <LibrarySong song={song} setCurrentSong={setCurrentSong} audioref={audioref} isPlaying={isPlaying} setSong={setSong} songs={songs} setPosition={setPosition} position={position}/>))}\r\n            \r\n        </div>\r\n    </div>\r\n    );\r\n}\r\nexport default Library;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faMusic} from \"@fortawesome/free-solid-svg-icons\"\r\n\r\nconst Nav=({libraryStatus,setLibraryStatus})=>{\r\n    return(\r\n    <nav>\r\n        <h1>Waves</h1>\r\n        <button onClick={()=>setLibraryStatus(!libraryStatus)}>\r\n            library\r\n            <FontAwesomeIcon icon={faMusic} />\r\n        </button>\r\n    </nav>\r\n    );\r\n}\r\nexport default Nav;","import React,{useState,useRef}from 'react';\n//import componentts\nimport Song from './Components/Song.js'\nimport Player from './Components/Player.js'\n//import style\nimport \"./Style/App.scss\"\n//import data\nimport  data from './Data.js'\n//import library\nimport Library from './Library.js'\n//import Nav\nimport Nav from './Components/Nav.js'\n\nfunction App() {\n  const audioref=useRef(null);\n    const [songInfo,setSongInfo]=useState({\n        currentTime :0,\n        duration :0,\n        animationPercentage:0\n    })\n     const timeUpdateHandler=(e)=>\n    {\n        const current=e.target.currentTime;\n        const duration=e.target.duration;\n        \n        const roundCurrent=Math.round(current);\n        const roundDuration=Math.round(duration);\n        const animation=Math.round((roundCurrent/roundDuration)*100);\n  \n        setSongInfo({...songInfo,currentTime: current,duration: duration,animationPercentage:animation})\n        \n    }\n    const playNextSong= async()=>{\n         let position=songs.findIndex((song)=> song.id === currentSong.id)\n         await setCurrentSong(songs[(position+1)%songs.length])\n         audioref.current.play();\n        \n\n    }\n  const[songs,setSong]=useState(data());\n  const[currentSong,setCurrentSong]=useState(songs[0])\n  const[isPlaying,setIsPlaying]=useState(false)\n  const[libraryStatus,setLibraryStatus]=useState(false)\n  const[position,setPosition]=useState(0);\n  \n\n  return (\n\n      <div className=\"music-player\">\n        <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus}/>\n        <Song currentSong={currentSong} />\n        <Player \n        currentSong={currentSong}\n         isPlaying={isPlaying}\n          setIsPlaying={setIsPlaying}\n          audioref={audioref}\n          songInfo={songInfo}\n          setSongInfo={setSongInfo}\n          setCurrentSong={setCurrentSong}\n           setPosition={setPosition} \n           position={position}\n           songs={songs}\n           setSong={setSong}\n           \n      \n             />\n         <Library songs={songs} setCurrentSong={setCurrentSong} audioref={audioref} isPlaying={isPlaying} setSong={setSong} libraryStatus={libraryStatus} position={position} setPosition={setPosition} />\n            <audio onTimeUpdate={timeUpdateHandler} src={currentSong.audio} ref={audioref} onLoadedMetadata={timeUpdateHandler} onEnded={playNextSong}></audio>\n            \n        \n        \n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  \n    <App />\n ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}